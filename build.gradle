/**
 * 1.0.0     : release
 * 1.0.1     : maven依存のtypo修正
 * 1.0.x     : Circle CIに移行
 * 1.1.x     : RxAndroid / ラムダを導入
 * 1.2.x     : コールバック用インターフェースを拡張
 * 1.3.x     : ContentHolder内部で不要だったクラスを保持しないように修正
 * 2.23.0.x  : バージョン規則を修正, 構成を大幅変更
 * 2.23.1.x  : ToolbarのID命名規則を変更
 * 2.24.0.x  : Android N対応
 * 2.24.1.x  : PlayService依存を削除
 * 2.24.3.x  : RxAndroid-Supportの依存バージョンを変更
 * 2.24.4.x  : Text-KeyValueStoreの依存バージョンを変更
 * 2.24.5.x  : support library 24.1.+に対応
 * 2.25.0.x  : API Level 25(Android 7.1)対応
 * 2.25.1.x  : Event Bus導入
 * 2.25.2.x  : SupportFragment構造変更
 * 2.25.3.x  : Deprecatedされたメソッドを整理
 * 2.25.4.x  : 文字列リソース名を変更, AS2.2.3対応
 * 2.25.6.x  : bintrayに移行
 */
def ARTIFACT_VERSION = "2.25.6"
def REPOSITORY_NAME = "maven"
def BINTRAY_LICENSES = ["MIT"]
def BINTRAY_LABELS = ["android"]
def BINTRAY_API_KEY = System.env.BINTRAY_API_KEY
def BINTRAY_GPG_PASS = System.env.BINTRAY_GPG_PASS

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://dl.bintray.com/eaglesakura/maven/" }
        maven { url "http://eaglesakura.github.io/maven/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
        classpath "com.eaglesakura:plugin-android-dbgenerator:2.1.162"
        classpath 'me.tatarka:gradle-retrolambda:3.5.0' // support Lambda
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://dl.bintray.com/eaglesakura/maven/" }
    maven { url "http://eaglesakura.github.io/maven/" }
}

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda' /* Android Lambda Support */
apply plugin: 'com.eaglesakura.android-props'
group = "com.eaglesakura"
version = ARTIFACT_VERSION + getArtifactVersionSuffix()


props {
    property file("properties.json")
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion 15      // 現実的な対応ラインとしてAndroid 4.0.4とする
        targetSdkVersion 25
        consumerProguardFiles 'proguard-rules.pro'
        // Device Test
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"    // JUnit4
    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        main {
            java.srcDirs += [
                    "src/main/gen/java",
            ]
        }
    }

    lintOptions {
//        disable "NewApi"
    }
}

// Local or maven
if (!hasProperty("EGLIBRARY_COMPILE_LOCAL")) {
    ext.EGLIBRARY_COMPILE_LOCAL = false
}

configurations {
    all*.exclude group: "com.google.code.findbugs", module: "jsr305"
    all*.exclude group: "org.apache.httpcomponents", module: "httpclient"

    // not using okhttp
    all*.exclude group: "com.squareup.okhttp3", module: "okhttp"
}


dependencies {
    if (EGLIBRARY_COMPILE_LOCAL) {
        compile project(':eglibrary:android-command-service')
        compile project(':eglibrary:android-text-kvs')
        compile project(':eglibrary:android-net')
        compile project(':eglibrary:onactivityresult-invoke')
        compile project(':eglibrary:small-aquery')
        compile project(':eglibrary:rxandroid-support')
        compile project(':eglibrary:margarineknife')
        compile project(':eglibrary:garnet')
        compile project(':eglibrary:light-saver')

        androidTestCompile project(":eglibrary:android-devicetest-support")
        testCompile project(":eglibrary:android-unittest-support")
    } else {
        compile "com.eaglesakura:android-command-service:1.2.458"
        compile "com.eaglesakura:android-text-kvs:2.1.447"
        compile "com.eaglesakura:android-net:1.2.489"
        compile "com.eaglesakura:onactivityresult-invoke:1.1.460"
        compile "com.eaglesakura:small-aquery:1.0.59"
        compile "com.eaglesakura:rxandroid-support:2.2.279"
        compile "com.eaglesakura:margarineknife:1.3.246"
        compile "com.eaglesakura:garnet:1.0.195"
        compile "com.eaglesakura:light-saver:1.1.107"

        androidTestCompile "com.eaglesakura:android-devicetest-support:2.1.270"
        testCompile "com.eaglesakura:android-unittest-support:1.4.206"
    }

    /**
     * support libs
     */
    compile "com.android.support:support-v4:25.3.0"
    compile "com.android.support:appcompat-v7:25.3.0"
    compile "com.android.support:cardview-v7:25.3.0"
    compile "com.android.support:recyclerview-v7:25.3.0"
    compile "com.android.support:palette-v7:25.3.0"
    compile "com.android.support:design:25.3.0"

    compile "com.android.support:support-annotations:25.3.0"

    /**
     * Smooth ProgressBar / 160 Method
     * https://github.com/castorflex/SmoothProgressBar
     */
    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'

    /**
     * RecyclerView / 65 Method
     * https://github.com/timehop/sticky-headers-recyclerview
     */
    compile 'com.timehop.stickyheadersrecyclerview:library:0.4.3@aar'

    /**
     * Runtime Event Bus/ 75 Method
     * Optional / 23 Method
     */
    compile 'com.squareup:otto:1.3.8'
    compile 'com.eccyan:rxjava-optional:1.1.2'

    /**
     * Scroll Event Handle / 275
     * https://github.com/ksoichiro/Android-ObservableScrollView
     */
    compile 'com.github.ksoichiro:android-observablescrollview:1.6.0'

}

/**
 * UnitTest & retro lambda
 */
tasks.withType(Test) {
    project.tasks
            .findAll {
        task -> (task.name ==~ /compile.*?TestJava.*?/)
    }
    .each { task ->
        task.doFirst {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

android.libraryVariants.all { variant ->
    if (!"release".equals(variant.name) || "".equals(ARTIFACT_VERSION)) {
        return;
    }

    task("javadoc", type: Javadoc) {
        title = "${file(".").name} ver ${ARTIFACT_VERSION}"
        description "Generates Android Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"

        classpath = files(variant.javaCompile.classpath.files) +
                files(ext.androidJar) +
                files("build/intermediates/classes/${variant.name}/") +
                fileTree("build/intermediates/exploded-aar").include("**/*.jar")

        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/*Dao.java' /* ignore greenDAO */
        exclude '**/DaoMaster.java' /* ignore greenDAO */
        exclude '**/DaoSession.java' /* ignore greenDAO */
        exclude '**/R.java' /* ignore greenDAO */

        options.addStringOption('Xdoclint:none', '-quiet')
        options.encoding = "UTF-8"
        project.configure(options) {
            memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
            charSet = "UTF-8"
        }
    }


    task("javadocJar", type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }
}

/**
 * バージョンを取得する
 * CircleCIの場合、バージョン末尾にビルド番号を付与する
 */
def getArtifactVersionSuffix() {
    if (System.env.CIRCLE_BUILD_NUM != null) {
        // CircleCIのバージョンが指定されているので、そちらを利用する
        return ".${System.env.CIRCLE_BUILD_NUM}"
    } else {
        return ".snapshot"
    }
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

bintray {
    user = 'eaglesakura'
    key = BINTRAY_API_KEY
    pkg {
        repo = REPOSITORY_NAME
        name = file(".").absoluteFile.name
        licenses = BINTRAY_LICENSES
        labels = BINTRAY_LABELS
        issueTrackerUrl = "https://github.com/eaglesakura/${file(".").absoluteFile.name}/issues"
        vcsUrl = "https://github.com/eaglesakura/${file(".").absoluteFile.name}"
        version {
            name = project.version
            released = new Date()
            gpg {
                sign = true
                passphrase = BINTRAY_GPG_PASS
            }
        }
    }
    configurations = ['archives']
}
